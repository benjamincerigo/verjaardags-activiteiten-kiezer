---
// ActivitySelector.astro
const { title, intro, activities, selectionKey = "2025-v1" } = Astro.props;
---

<main class="container">
  <h1>{title}</h1>
  <p class="intro-text">{intro}</p>
  <div class="input-container">
    <input type="date" id="birthdayDate" required />
  </div>
  <div class="input-container">
    <input
      type="text"
      id="fullName"
      placeholder="Vul je volledige naam in"
      required
    />
  </div>
  <button id="generateButton">Ik ben jarig!</button>
  <div id="result">
    <p class="celebration">ðŸŽŠ Gefeliciteerd! ðŸŽŠ</p>
    <p>Kies 1 activiteiten uit deze opties:</p>
    <div id="activities"></div>
  </div>
</main>

<script define:vars={{ activities, selectionKey }} type="module">
  // This key can be updated to generate new combinations
  const SELECTION_KEY = "2025-v1";

  // Simple hash function to generate a number from a string
  function hashCode(str) {
    let hash = 0;
    for (let i = 0; i < str.length; i++) {
      const char = str.charCodeAt(i);
      hash = (hash << 5) - hash + char;
      hash = hash & hash;
    }
    return Math.abs(hash);
  }

  // Fisher-Yates shuffle with a seed
  function seededShuffle(array, seed) {
    const shuffled = [...array];
    let currentIndex = shuffled.length;
    const random = mulberry32(seed);

    while (currentIndex != 0) {
      const randomIndex = Math.floor(random() * currentIndex);
      currentIndex--;
      [shuffled[currentIndex], shuffled[randomIndex]] = [
        shuffled[randomIndex],
        shuffled[currentIndex],
      ];
    }

    return shuffled;
  }

  // Seeded random number generator
  function mulberry32(a) {
    return function () {
      a = (a + 0x6d2b79f5) | 0;
      let t = Math.imul(a ^ (a >>> 15), 1 | a);
      t = (t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ t;
      return ((t ^ (t >>> 14)) >>> 0) / 4294967296;
    };
  }

  function formatDate(date) {
    const [year, month, day] = date.split("-");
    return `${day}-${month}-${year}`;
  }

  function generateActivitySelections(
    birthdayDate,
    fullName,
    activities,
    selectionCount = 4,
  ) {
    if (!birthdayDate || !fullName) {
      return null;
    }

    // Create a deterministic seed based on name, date and selection key
    const formattedDate = formatDate(birthdayDate);
    const seed = hashCode(
      fullName.toLowerCase() + formattedDate + SELECTION_KEY,
    );

    // Get deterministic selections
    const shuffled = seededShuffle(activities, seed);
    return shuffled.slice(0, selectionCount);
  }

  document
    .getElementById("generateButton")
    .addEventListener("click", function () {
      const birthdayDate = document.getElementById("birthdayDate").value;
      const fullName = document.getElementById("fullName").value;

      if (!birthdayDate || !fullName) {
        alert("Vul alsjeblieft beide velden in!");
        return;
      }

      // Create a deterministic seed based on name, date and selection key
      const formattedDate = formatDate(birthdayDate);
      const seed = hashCode(
        fullName.toLowerCase() + formattedDate + selectionKey,
      );

      // Get selections using imported utility function
      const selected = generateActivitySelections(
        birthdayDate,
        fullName,
        activities,
      );

      const activitiesDiv = document.getElementById("activities");
      activitiesDiv.innerHTML = selected
        .map(
          (activity, index) =>
            `<div class="choice">${index + 1}. ${activity}</div>`,
        )
        .join("");

      document.getElementById("result").style.display = "block";
    });
</script>

<style>
  :root {
    --pico-border-radius: 2rem;
    --pico-form-element-spacing-vertical: 1rem;
    --pico-form-element-spacing-horizontal: 1.25rem;
  }
  main {
    margin-top: 2rem;
    text-align: center;
  }
  h1 {
    margin-bottom: 2rem;
  }
  #result {
    display: none;
    margin-top: 20px;
    padding: 20px;
    background-color: #f8fafc;
    border-radius: 5px;
  }
  .celebration {
    text-align: center;
    color: #2563eb;
    font-size: 1.2em;
    margin-bottom: 15px;
  }
</style>

<style is:global>
  .choice {
    margin: 10px 0;
    padding: 10px;
    background-color: white;
    border: 1px solid #e5e7eb;
    border-radius: 5px;
  }
</style>
